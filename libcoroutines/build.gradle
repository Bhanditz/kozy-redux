apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    compileSdkVersion compileSdk
    buildToolsVersion buildTools

    defaultConfig {
        minSdkVersion minSdk
        targetSdkVersion targetSdk

        versionCode majorAppVersion * 10000 + minorAppVersion * 1000 + patchAppVersion * 100 + buildAppVersion
        versionName "${majorAppVersion}.${minorAppVersion}.${patchAppVersion}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    lintOptions {
        textReport true
        textOutput "stdout"
        fatal "UnusedResources"
        warningsAsErrors true
        abortOnError true
    }

    compileOptions {
        sourceCompatibility sourceCompatJavaVersion
        targetCompatibility targetCompatJavaVersion
    }

    packagingOptions {
        exclude "META-INF/NOTICE"
        exclude "META-INF/NOTICE.txt"
        exclude "META-INF/LICENSE"
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/services/javax.annotation.processing.Processor"
    }

    dexOptions {
        javaMaxHeapSize "3g"
        jumboMode = true
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        androidTest.java.srcDirs += "src/androidTest/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dependencies {
    // Core library
    implementation project(":libcore")

    // Testing dependencies
    testImplementation "junit:junit:${junitVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"

    // Kotlin specific dependencies
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutinesVersion}"

    // Anko
    implementation "org.jetbrains.anko:anko-coroutines:${ankoVersion}"
}